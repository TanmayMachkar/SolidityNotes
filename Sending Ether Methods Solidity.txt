sending ether methods

// SPDX-License-Identifier: MIT
pragma solidity ^0.8.13;

contract receiveEther{
    /*
    which function is called, fallback() or receive()

    send ether
        |
        |
    msg.data is empty?
       /       \
     yes       no
      /         \
receive() exists?  fallback()
    */
    receive() external payable {}

    //Fallback function is called when msg.data is not empty
    fallback() external payable {}

    function getBalance() public view returns(uint){
        return address(this).balance;
    }
}

contract sendEther{
    function sendViaTransfer(address payable _to) public payable{
        //this function is no longer recommended for sending ether
        // sendViaTransfer: The name of the function.
        // address payable _to: Declares a parameter named _to of type address payable. This parameter represents the address to which the Ether will be transferred.
        // public: Indicates that this function can be called from outside the contract.
        // payable: This modifier indicates that this function can receive Ether.
        // msg.value: This is a special variable in Solidity that represents the amount of Ether (in wei) sent with the function call.
        // _to.transfer(msg.value): This line transfers the Ether sent with the function call to the address _to. The transfer function is used to send Ether to another address. If the transfer fails (due to an error or if the recipient contract runs out of gas), the transaction will be reverted.
        // This function can be called by anyone sending Ether along with the function call, and it will transfer that Ether to the specified _to address.
        _to.transfer(msg.value);
    }

    function sendViaSend(address payable _to) public payable{
        //send returns a boolean value indicating success or failure
        //this function is no longer recommended for sending ether
        bool sent = _to.send(msg.value);
        require(sent, "Failed to send ether");
    }

    function sendViaCall(address payable _to) public payable {
        //call return a boolean value indicating success or failure
        //this is the current recommended method to use
        (bool sent, bytes memory data) = _to.call{value: msg.value}("");
        require(sent, "Failed to send ether");
    }
}