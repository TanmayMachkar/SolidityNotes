visibility solidity

// SPDX-License-Identifier: MIT
pragma solidity ^0.8.13;

contract Base{
    function privFunc() private pure returns(string memory){
        return "Private function called";
    }

    function testPrivFunc() public pure returns(string memory){
        return privFunc();
    }

    function internalFunc() internal pure returns(string memory){
        return "Internal function called";
    }

    function testInternalFunc() public pure virtual returns(string memory){
        return internalFunc();
    }

    function publicFunc() public pure returns(string memory){
        return "Public Function Called";
    }

    function externalFunc() external pure returns(string memory){
        return "External function called";
    }

    string private privateVar = "my private variable";
    string internal internalVar = "my internal variable";
    string public publicVar = "my public var";    
}

contract Child is Base{
    function testInternalFunc() public pure override returns(string memory){
        return internalFunc();
    }   
}